


文件的组织
因为有服务端, 所以一些共享数据放到了工程了 common 文件夹的 common.h文件中.
另外一些共享的类也放在在这个文件夹中, 比如控制台和外挂使用的共享内存, hook
类.


设计思路
按照MFC的框架, 数据和视图是分离的. 因此我逆推测, 一个数据是可以对应多个视图
的, 比如我当前导入一个帐号的文本, 我可以用一个列表视图, 我也可以用一个树视图,
要有这种可能, 我是猜测视图类中不该有包含非界面的代码, 否则当我切换视图方式
时, 就需要重写这些功能性代码.

那菜单是数据还是视图呢? 就是说当我切换一个视图时, 我需要相应的菜单还是通用的菜单.
比如当我切换到编辑视图时, 我就需要有复制和粘贴的菜单, 但是当我切换到列表视图
时, 就不需要有这些菜单. 这样我再推测, 菜单的实现逻辑应该是既可以放在数据中,
也可以放在视图中实现, 看类别. 像是复制这种菜单命令, 肯定是把逻辑写到视图中.


这种某些功能放到哪里的问题我还不太掌握, 但是目前就按上面这样的总结来写,
另外一个总结就是当我要实现的功能需要的变量在某个类, 那就在这个类中实现.

比如我要http发包, 用到CHttpFile, 这个变量我声明在了视图类中, 那我就为了方便
访问这个变量把功能写到视图类中. 这是个举例, 一般来说, 我不会把这种功能的代码
放到视图类中, 否则情况就是和上面一样, 当我切换视图时, 就需要重写这部分代码.

目前我的总结就是视图中不写功能性的代码, 只写和视图有关的.
另外数据视图结构的程序, 视图也是可以更改数据的. 比如当我点击Clear ALL, 我
就可以清空数据. 而当我在列表视图中点击清空列表菜单时, 也是可以清空数据的.
这也就是说明不同的视图可能需要同一种功能代码, 此时这个功能代码是否可以放到
数据类中, 目前看来是这样. MFC的文档类中, 就提供了 DeleteContect, 意思也是
删除文档.



线程的问题
线程池是在频繁创建和销毁线程时才需要, 领取哪里用到了线程池, 因为否则确实要
频繁创建线程. 但是我觉得这个线程池就是很基本的. 他的几个关键是就是队列
和工作项. 工作项我理解成一个实现的方式, 队列和工作项是有关系的, 互相使用.

线程池应该有一个最大线程数, 而且线程池的队列也应该是有边界的. 这样我到是
可以动态的改变当前线程数量了, 比如当我队列满时, 我就会去创建一个新的线程
来处理队列中的工作项, 这样加快速度.

因为正常来说, 队列满时的添加队列需要等待, 直到了队列有闲置的位置了.
这个就没考虑.

我在领取时创建一个线程池, 设置10个线程, 这样他就创建了10个线程, 线程函数
开始就等待一个信号量, 信号量有, 就从他自己的队列中抽取一个项, 就是工作项,
这个工作项类中有一个执行函数, 开始执行这个函数. 这种本身不实现功能, 但是
把问题给用一种抽象的概念包裹起来就比较容易理解.

这样就形成了, 我只要从工作项基类派生一个自己的类, 类中实现自己的功能, 就
实现了一次创建线程函数, 但是却可以再以后自定义线程函数功能的目的.

另外一个线程的问题是目前只领取和激活用到了线程池, 这样不至于卡界面.但是
我单独领取的函数并没使用线程, 单独领取也没有使用线程, 于是肯定会卡界面的,

我想的方式就是在程序启动时就预备一个线程. 因为是不可能领取和激活一块执行,
而且界面中的领取状态也显示混乱. 于是我想将这些不可一起执行的功能放到这个
预备线程中运行, 这样不致于领取时创建一个单独线程, 激活时创建一个单独线程.


共享内存
控制台启动时会创建一个共享内存区域, 每启动一个游戏会将游戏的帐号和配置文件名
放到共享内存中, 这样外挂启动时根据pid来获取配置文件名, 然后加载对应的配置
文件. 共享内存 ShareMem 实现, 加载配置部分在Gamecall里的Init函数中.

共享内存的使用方式
当加载一个游戏时将这个游戏的数据放到共享内存中, 这个游戏退出时, 从共享内存中
删除. 这样用一个计时器时刻枚举共享数据中的pid, 如果pid不存在了, 判断为
这个游戏关闭了, 然后响应在界面上, 同时从共享内存中删除这片共享数据

如果游戏帐号列表打开了一个200行帐号的文本, 控制套先创建能容纳200个共享数据
大小的共享内存.


登录对话框
登录对话框到底要不要加入逻辑, 还是只是作为获取用户名和密码的界面. 我把连接
服务器和登录服务器放到了登录对话框中.

服务端的界面
两个列表控件


